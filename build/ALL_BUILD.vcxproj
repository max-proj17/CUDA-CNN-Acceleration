<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{84A2E0A9-A6CD-3E74-B7C1-F31624405EC9}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.1.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\maxfi\source\repos\CUDA-CNN\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include;C:\Users\maxfi\Desktop\libtorch\include;C:\Users\maxfi\Desktop\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\maxfi\source\repos\CUDA-CNN\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include;C:\Users\maxfi\Desktop\libtorch\include;C:\Users\maxfi\Desktop\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\maxfi\source\repos\CUDA-CNN\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include;C:\Users\maxfi\Desktop\libtorch\include;C:\Users\maxfi\Desktop\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\maxfi\source\repos\CUDA-CNN\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include;C:\Users\maxfi\Desktop\libtorch\include;C:\Users\maxfi\Desktop\libtorch\include\torch\csrc\api\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\maxfi\source\repos\CUDA-CNN\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/maxfi/source/repos/CUDA-CNN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/maxfi/source/repos/CUDA-CNN -BC:/Users/maxfi/source/repos/CUDA-CNN/build --check-stamp-file C:/Users/maxfi/source/repos/CUDA-CNN/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Config.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets-release.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\FindCUDAToolkit.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\CMakeInitializeConfigs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA\select_compute_arch.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageHandleStandardArgs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageMessage.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\cuda.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkl.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkldnn.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\utils.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfig.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfigVersion.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCUDACompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCXXCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeRCCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeSystem.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_compute_capabilities.cu;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_version.cc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/maxfi/source/repos/CUDA-CNN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/maxfi/source/repos/CUDA-CNN -BC:/Users/maxfi/source/repos/CUDA-CNN/build --check-stamp-file C:/Users/maxfi/source/repos/CUDA-CNN/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Config.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets-release.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\FindCUDAToolkit.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\CMakeInitializeConfigs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA\select_compute_arch.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageHandleStandardArgs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageMessage.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\cuda.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkl.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkldnn.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\utils.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfig.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfigVersion.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCUDACompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCXXCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeRCCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeSystem.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_compute_capabilities.cu;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_version.cc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/maxfi/source/repos/CUDA-CNN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/maxfi/source/repos/CUDA-CNN -BC:/Users/maxfi/source/repos/CUDA-CNN/build --check-stamp-file C:/Users/maxfi/source/repos/CUDA-CNN/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Config.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets-release.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\FindCUDAToolkit.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\CMakeInitializeConfigs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA\select_compute_arch.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageHandleStandardArgs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageMessage.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\cuda.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkl.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkldnn.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\utils.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfig.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfigVersion.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCUDACompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCXXCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeRCCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeSystem.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_compute_capabilities.cu;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_version.cc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/maxfi/source/repos/CUDA-CNN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/maxfi/source/repos/CUDA-CNN -BC:/Users/maxfi/source/repos/CUDA-CNN/build --check-stamp-file C:/Users/maxfi/source/repos/CUDA-CNN/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Config.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets-release.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Caffe2Targets.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\FindCUDAToolkit.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\CMakeInitializeConfigs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindCUDA\select_compute_arch.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageHandleStandardArgs.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\Modules_CUDA_fix\upstream\FindPackageMessage.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\cuda.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkl.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\mkldnn.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Caffe2\public\utils.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfig.cmake;C:\Users\maxfi\Desktop\libtorch\share\cmake\Torch\TorchConfigVersion.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCUDACompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeCXXCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeRCCompiler.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\3.28.0-rc4\CMakeSystem.cmake;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_compute_capabilities.cu;C:\Users\maxfi\source\repos\CUDA-CNN\build\detect_cuda_version.cc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\maxfi\source\repos\CUDA-CNN\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\maxfi\source\repos\CUDA-CNN\build\ZERO_CHECK.vcxproj">
      <Project>{466A93AE-771E-3519-8CCE-624AC43BDF9C}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Users\maxfi\source\repos\CUDA-CNN\build\MyCUDAExecutable.vcxproj">
      <Project>{CAF364BB-BFEC-3DDC-BB66-2CCEF158FEF5}</Project>
      <Name>MyCUDAExecutable</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 12.1.targets" />
  </ImportGroup>
</Project>